{"ast":null,"code":"var _jsxFileName = \"/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { menProducts } from './data';\nconst ProductContext = React.createContext();\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      modalOpen: false,\n      itemsTotal: 0,\n      salesTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      menProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      const size = product.size;\n      product.size = size;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedItem = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedItem);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedItem = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedItem);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let suboTotal = 0;\n      this.state.cart.map(item => suboTotal += item.total);\n      const tempTax = suboTotal * 0.0775;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = suboTotal + tax;\n      const subTotal = parseFloat(suboTotal.toFixed(2));\n      this.setState(() => {\n        return {\n          itemsTotal: subTotal,\n          salesTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n;\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/context.js"],"names":["React","Component","menProducts","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","itemsTotal","salesTax","cartTotal","setProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","detailProduct","addToCart","tempProducts","index","indexOf","inCart","count","price","total","size","addTotals","openModal","modalProduct","closeModal","increment","tempCart","selectedItem","decrement","removeItem","filter","removedProduct","clearCart","suboTotal","map","tempTax","tax","parseFloat","toFixed","subTotal","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {menProducts} from './data';\nconst ProductContext = React.createContext();\n\nexport default class ProductProvider extends Component {\n    state = {\n        products: [],\n        \n        cart: [],\n        modalOpen: false,\n        \n        itemsTotal: 0,\n        salesTax: 0,\n        cartTotal: 0,\n\n\n    };\n    componentDidMount() {\n        this.setProducts();\n    }\n    setProducts = () => {\n        let products = [];\n        menProducts.forEach(item => {\n            const singleItem = {...item};\n            products = [...products, singleItem];\n        })\n        this.setState(() => {\n            return {products}\n        });\n    };\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetail = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct:product}\n        });\n    };\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        let product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        const size = product.size;\n        product.size = size;\n        this.setState(() => {\n            return { products: tempProducts, cart: [...this.state.cart, product]};\n            },\n        () => {\n            this.addTotals();\n            }\n        );\n    };\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { modalProduct: product, modalOpen: true }\n        });\n    };\n    closeModal = () => {\n        this.setState(() => {\n            return { modalOpen: false }\n        })\n    };\n    increment = id => {\n        let tempCart = [...this.state.cart];\n        const selectedItem = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedItem);\n        const product = tempCart[index];\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n        this.setState(() => {\n            return {\n                cart: [...tempCart]\n            }\n        }, () => {\n            this.addTotals();\n        })\n    };\n\n    decrement = id => {\n        let tempCart = [...this.state.cart];\n        const selectedItem = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedItem);\n        const product = tempCart[index];\n        product.count = product.count - 1;\n\n        if(product.count === 0) {\n            this.removeItem(id);\n        } else {\n            product.total = product.count * product.price;\n            this.setState(() => {\n                return {\n                    cart: [...tempCart]\n                }\n            }, () => {\n                this.addTotals();\n            })\n        }\n    };\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id);\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n        this.setState(() => {\n            return {\n                cart:[...tempCart],\n                products:[...tempProducts]\n            };\n        },\n        () => {\n            this.addTotals();\n        })\n    };\n\n    clearCart = () => {\n        this.setState(() => {\n            return {cart: []};\n        }, () => {\n            this.setProducts();\n            this.addTotals();\n        })\n    };\n\n    addTotals = () => {\n        let suboTotal = 0;\n        this.state.cart.map(item => (suboTotal += item.total));\n        const tempTax = suboTotal * 0.0775;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = suboTotal + tax;\n        const subTotal = parseFloat(suboTotal.toFixed(2));\n        this.setState(() => {\n            return {\n                itemsTotal: subTotal,\n                salesTax: tax,\n                cartTotal: total,\n            }\n        })\n    }\n\n\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart,\n            }}>\n                {this.props.children}\n                </ProductContext.Provider>\n        )\n    }\n};\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}