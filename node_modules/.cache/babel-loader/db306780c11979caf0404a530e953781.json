{"ast":null,"code":"var _jsxFileName = \"/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/components/Breadcrumbs/Breadcrumbs.js\";\nimport React from \"react\";\nimport { Breadcrumbs as MUIBreadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Breadcrumbs = props => {\n  const {\n    history,\n    location: {\n      pathname\n    }\n  } = props;\n  const pathnames = pathname.split(\"/\").filter(x => x);\n  return /*#__PURE__*/React.createElement(MUIBreadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    className: \"bread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, pathnames.length > 0 ? /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Home\") : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \" Home \"), pathnames.map((name, index) => {\n    const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n    const isLast = index === pathnames.length - 1;\n    return isLast ? /*#__PURE__*/React.createElement(Typography, {\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, name) : /*#__PURE__*/React.createElement(Link, {\n      key: name,\n      onClick: () => history.push(routeTo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, name);\n  }));\n};\n\nexport default withRouter(Breadcrumbs);","map":{"version":3,"sources":["/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/components/Breadcrumbs/Breadcrumbs.js"],"names":["React","Breadcrumbs","MUIBreadcrumbs","Link","Typography","withRouter","props","history","location","pathname","pathnames","split","filter","x","length","push","map","name","index","routeTo","slice","join","isLast"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WAAW,IAAIC,cADjB,EAEEC,IAFF,EAGEC,UAHF,QAIO,mBAJP;AAKA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMJ,WAAW,GAAGK,KAAK,IAAI;AAC3B,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA;AAAF;AAFN,MAGFH,KAHJ;AAIA,QAAMI,SAAS,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2BC,CAAC,IAAIA,CAAhC,CAAlB;AACA,sBACE,oBAAC,cAAD;AAAgB,kBAAW,YAA3B;AAAwC,IAAA,SAAS,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,CAACI,MAAV,GAAmB,CAAnB,gBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAMP,OAAO,CAACQ,IAAR,CAAa,GAAb,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMGL,SAAS,CAACM,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,UAAMC,OAAO,GAAI,IAAGT,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBF,KAAK,GAAG,CAA3B,EAA8BG,IAA9B,CAAmC,GAAnC,CAAwC,EAA5D;AACA,UAAMC,MAAM,GAAGJ,KAAK,KAAKR,SAAS,CAACI,MAAV,GAAmB,CAA5C;AACA,WAAOQ,MAAM,gBACX,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEL,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,IAAxB,CADW,gBAGX,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAiB,MAAA,OAAO,EAAE,MAAMV,OAAO,CAACQ,IAAR,CAAaI,OAAb,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IADH,CAHF;AAOD,GAVA,CANH,CADF;AAoBD,CA1BD;;AA4BA,eAAeZ,UAAU,CAACJ,WAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {\n  Breadcrumbs as MUIBreadcrumbs,\n  Link,\n  Typography\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Breadcrumbs = props => {\n  const {\n    history,\n    location: { pathname }\n  } = props;\n  const pathnames = pathname.split(\"/\").filter(x => x);\n  return (\n    <MUIBreadcrumbs aria-label=\"breadcrumb\" className='bread'>\n      {pathnames.length > 0 ? (\n        <Link onClick={() => history.push(\"/\")}>Home</Link>\n      ) : (\n        <Typography> Home </Typography>\n      )}\n      {pathnames.map((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n        const isLast = index === pathnames.length - 1;\n        return isLast ? (\n          <Typography key={name}>{name}</Typography>\n        ) : (\n          <Link key={name} onClick={() => history.push(routeTo)}>\n            {name}\n          </Link>\n        );\n      })}\n    </MUIBreadcrumbs>\n  );\n};\n\nexport default withRouter(Breadcrumbs);\n"]},"metadata":{},"sourceType":"module"}