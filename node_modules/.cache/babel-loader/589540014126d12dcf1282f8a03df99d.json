{"ast":null,"code":"import React from\"react\";import{Breadcrumbs as MUIBreadcrumbs,Link,Typography}from\"@material-ui/core\";import{withRouter}from\"react-router-dom\";var Breadcrumbs=function Breadcrumbs(props){var history=props.history,pathname=props.location.pathname;var pathnames=pathname.split(\"/\").filter(function(x){return x;});return/*#__PURE__*/React.createElement(MUIBreadcrumbs,{className:\"breadcrumb\"},pathnames.length>0?/*#__PURE__*/React.createElement(Link,{color:\"inherit\",onClick:function onClick(){return history.push(\"/\");}},\"Home\"):/*#__PURE__*/React.createElement(Typography,null,\" Home \"),pathnames.map(function(name,index){var routeTo=\"/\".concat(pathnames.slice(0,index+1).join(\"/\"));var isLast=index===pathnames.length-1;return isLast?/*#__PURE__*/React.createElement(Typography,{key:name},name):/*#__PURE__*/React.createElement(Link,{key:name,onClick:function onClick(){return history.push(routeTo);}},name);}));};export default withRouter(Breadcrumbs);","map":{"version":3,"sources":["/Users/vladimir/Desktop/E-shop/src/components/Breadcrumbs/Breadcrumbs.js"],"names":["React","Breadcrumbs","MUIBreadcrumbs","Link","Typography","withRouter","props","history","pathname","location","pathnames","split","filter","x","length","push","map","name","index","routeTo","slice","join","isLast"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,WAAW,GAAIC,CAAAA,cADjB,CAEEC,IAFF,CAGEC,UAHF,KAIO,mBAJP,CAKA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMJ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAK,KAAK,CAAI,IAEzBC,CAAAA,OAFyB,CAIvBD,KAJuB,CAEzBC,OAFyB,CAGbC,QAHa,CAIvBF,KAJuB,CAGzBG,QAHyB,CAGbD,QAHa,CAK3B,GAAME,CAAAA,SAAS,CAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2B,SAAAC,CAAC,QAAIA,CAAAA,CAAJ,EAA5B,CAAlB,CACA,mBACE,oBAAC,cAAD,EAAgB,SAAS,CAAC,YAA1B,EACGH,SAAS,CAACI,MAAV,CAAmB,CAAnB,cACC,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,OAAO,CAAE,yBAAMP,CAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAN,EAA/B,SADD,cAGC,oBAAC,UAAD,eAJJ,CAMGL,SAAS,CAACM,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC9B,GAAMC,CAAAA,OAAO,YAAOT,SAAS,CAACU,KAAV,CAAgB,CAAhB,CAAmBF,KAAK,CAAG,CAA3B,EAA8BG,IAA9B,CAAmC,GAAnC,CAAP,CAAb,CACA,GAAMC,CAAAA,MAAM,CAAGJ,KAAK,GAAKR,SAAS,CAACI,MAAV,CAAmB,CAA5C,CACA,MAAOQ,CAAAA,MAAM,cACX,oBAAC,UAAD,EAAY,GAAG,CAAEL,IAAjB,EAAwBA,IAAxB,CADW,cAGX,oBAAC,IAAD,EAAM,GAAG,CAAEA,IAAX,CAAiB,OAAO,CAAE,yBAAMV,CAAAA,OAAO,CAACQ,IAAR,CAAaI,OAAb,CAAN,EAA1B,EACGF,IADH,CAHF,CAOD,CAVA,CANH,CADF,CAoBD,CA1BD,CA4BA,cAAeZ,CAAAA,UAAU,CAACJ,WAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {\n  Breadcrumbs as MUIBreadcrumbs,\n  Link,\n  Typography\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Breadcrumbs = props => {\n  const {\n    history,\n    location: { pathname }\n  } = props;\n  const pathnames = pathname.split(\"/\").filter(x => x);\n  return (\n    <MUIBreadcrumbs className=\"breadcrumb\">\n      {pathnames.length > 0 ? (\n        <Link color=\"inherit\" onClick={() => history.push(\"/\")}>Home</Link>\n      ) : (\n        <Typography > Home </Typography>\n      )}\n      {pathnames.map((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n        const isLast = index === pathnames.length - 1;\n        return isLast ? (\n          <Typography key={name}>{name}</Typography>\n        ) : (\n          <Link key={name} onClick={() => history.push(routeTo)}>\n            {name}\n          </Link>\n        );\n      })}\n    </MUIBreadcrumbs>\n  );\n};\n\nexport default withRouter(Breadcrumbs);\n"]},"metadata":{},"sourceType":"module"}