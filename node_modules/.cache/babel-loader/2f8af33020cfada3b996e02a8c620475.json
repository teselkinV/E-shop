{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _transitions = require('../styles/transitions');\n\nvar _transitions2 = _interopRequireDefault(_transitions);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props) {\n  var defaultStyles = {\n    position: 'absolute',\n    lineHeight: '22px',\n    top: 38,\n    transition: _transitions2.default.easeOut(),\n    zIndex: 1,\n    // Needed to display label above Chrome's autocomplete field background\n    cursor: props.disabled ? 'not-allowed' : 'text',\n    transform: 'scale(1) translate(0, 0)',\n    transformOrigin: 'left top',\n    pointerEvents: 'auto',\n    userSelect: 'none'\n  };\n  var shrinkStyles = props.shrink ? (0, _simpleAssign2.default)({\n    transform: 'scale(0.75) translate(0, -28px)',\n    pointerEvents: 'none'\n  }, props.shrinkStyle) : null;\n  return {\n    root: (0, _simpleAssign2.default)(defaultStyles, props.style, shrinkStyles)\n  };\n}\n\nvar TextFieldLabel = function TextFieldLabel(props) {\n  var muiTheme = props.muiTheme;\n  var className = props.className;\n  var children = props.children;\n  var htmlFor = props.htmlFor;\n  var onTouchTap = props.onTouchTap;\n  var prepareStyles = muiTheme.prepareStyles;\n  var styles = getStyles(props);\n  return _react2.default.createElement('label', {\n    className: className,\n    style: prepareStyles(styles.root),\n    htmlFor: htmlFor,\n    onTouchTap: onTouchTap\n  }, children);\n};\n\nTextFieldLabel.propTypes = {\n  /**\n   * The label contents.\n   */\n  children: _react.PropTypes.node,\n\n  /**\n   * The css class name of the root element.\n   */\n  className: _react.PropTypes.string,\n\n  /**\n   * Disables the label if set to true.\n   */\n  disabled: _react.PropTypes.bool,\n\n  /**\n   * The id of the target element that this label should refer to.\n   */\n  htmlFor: _react.PropTypes.string,\n\n  /**\n   * @ignore\n   * The material-ui theme applied to this component.\n   */\n  muiTheme: _react.PropTypes.object.isRequired,\n\n  /**\n   * Callback function for when the label is selected via a touch tap.\n   */\n  onTouchTap: _react.PropTypes.func,\n\n  /**\n   * True if the floating label should shrink.\n   */\n  shrink: _react.PropTypes.bool,\n\n  /**\n   * Override the inline-styles of the root element when focused.\n   */\n  shrinkStyle: _react.PropTypes.object,\n\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _react.PropTypes.object\n};\nTextFieldLabel.defaultProps = {\n  disabled: false,\n  shrink: false\n};\nexports.default = TextFieldLabel;","map":{"version":3,"sources":["/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/node_modules/material-ui/TextField/TextFieldLabel.js"],"names":["Object","defineProperty","exports","value","_simpleAssign","require","_simpleAssign2","_interopRequireDefault","_react","_react2","_transitions","_transitions2","obj","__esModule","default","getStyles","props","defaultStyles","position","lineHeight","top","transition","easeOut","zIndex","cursor","disabled","transform","transformOrigin","pointerEvents","userSelect","shrinkStyles","shrink","shrinkStyle","root","style","TextFieldLabel","muiTheme","className","children","htmlFor","onTouchTap","prepareStyles","styles","createElement","propTypes","PropTypes","node","string","bool","object","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _transitions = require('../styles/transitions');\n\nvar _transitions2 = _interopRequireDefault(_transitions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getStyles(props) {\n  var defaultStyles = {\n    position: 'absolute',\n    lineHeight: '22px',\n    top: 38,\n    transition: _transitions2.default.easeOut(),\n    zIndex: 1, // Needed to display label above Chrome's autocomplete field background\n    cursor: props.disabled ? 'not-allowed' : 'text',\n    transform: 'scale(1) translate(0, 0)',\n    transformOrigin: 'left top',\n    pointerEvents: 'auto',\n    userSelect: 'none'\n  };\n\n  var shrinkStyles = props.shrink ? (0, _simpleAssign2.default)({\n    transform: 'scale(0.75) translate(0, -28px)',\n    pointerEvents: 'none'\n  }, props.shrinkStyle) : null;\n\n  return {\n    root: (0, _simpleAssign2.default)(defaultStyles, props.style, shrinkStyles)\n  };\n}\n\nvar TextFieldLabel = function TextFieldLabel(props) {\n  var muiTheme = props.muiTheme;\n  var className = props.className;\n  var children = props.children;\n  var htmlFor = props.htmlFor;\n  var onTouchTap = props.onTouchTap;\n  var prepareStyles = muiTheme.prepareStyles;\n\n  var styles = getStyles(props);\n\n  return _react2.default.createElement(\n    'label',\n    {\n      className: className,\n      style: prepareStyles(styles.root),\n      htmlFor: htmlFor,\n      onTouchTap: onTouchTap\n    },\n    children\n  );\n};\n\nTextFieldLabel.propTypes = {\n  /**\n   * The label contents.\n   */\n  children: _react.PropTypes.node,\n  /**\n   * The css class name of the root element.\n   */\n  className: _react.PropTypes.string,\n  /**\n   * Disables the label if set to true.\n   */\n  disabled: _react.PropTypes.bool,\n  /**\n   * The id of the target element that this label should refer to.\n   */\n  htmlFor: _react.PropTypes.string,\n  /**\n   * @ignore\n   * The material-ui theme applied to this component.\n   */\n  muiTheme: _react.PropTypes.object.isRequired,\n  /**\n   * Callback function for when the label is selected via a touch tap.\n   */\n  onTouchTap: _react.PropTypes.func,\n  /**\n   * True if the floating label should shrink.\n   */\n  shrink: _react.PropTypes.bool,\n  /**\n   * Override the inline-styles of the root element when focused.\n   */\n  shrinkStyle: _react.PropTypes.object,\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _react.PropTypes.object\n};\n\nTextFieldLabel.defaultProps = {\n  disabled: false,\n  shrink: false\n};\n\nexports.default = TextFieldLabel;"]},"metadata":{},"sourceType":"script"}