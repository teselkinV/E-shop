{"ast":null,"code":"var _jsxFileName = \"/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/components/ShoppingCart/PaymentForm.js\";\nimport { CardForm, BankForm, PaymentMethods } from 'react-payment';\nimport React, { Component } from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport server from './server';\nlet loadedStripe = false;\nexport default class PaymentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dialogOpen: false,\n      cardDialog: true\n    };\n\n    this.openDialog = type => {\n      this.setState({\n        dialogOpen: true,\n        cardDialog: type === 'card' ? true : false\n      });\n    };\n\n    this.closeDialog = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.removeCard = id => {\n      server.removeCard(id);\n    };\n\n    this.removeBank = id => {\n      server.removeBankAccount(id);\n    };\n\n    this.onSubmitCard = card => {\n      const {\n        number,\n        exp_month,\n        exp_year,\n        cvc,\n        name,\n        zip\n      } = card;\n      Stripe.card.createToken({\n        number,\n        exp_month,\n        exp_year,\n        cvc,\n        name,\n        address_zip: zip\n      }, (status, response) => {\n        if (response.error) {\n          alert('Adding card failed with error: ' + response.error.message);\n        } else {\n          const cardToken = response.id;\n          server.saveCard(cardToken);\n          this.closeDialog(); // show success message\n        }\n      });\n    };\n\n    this.onSubmitBank = account => {\n      const {\n        name,\n        accountNumber,\n        routingNumber,\n        accountType\n      } = account;\n      const account_holder_type = accountType === 'personal' ? 'individual' : 'company';\n      Stripe.bankAccount.createToken({\n        country: 'US',\n        currency: 'USD',\n        routing_number: routingNumber,\n        account_number: accountNumber,\n        account_holder_name: name,\n        account_holder_type\n      }, (status, response) => {\n        if (response.error) {\n          alert('Adding bank account failed with error: ' + response.error.message);\n        } else {\n          const bankAccountToken = response.id;\n          server.saveBankAccount(bankAccountToken);\n          this.closeDialog(); // show success message\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (loadedStripe) {\n      return;\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://js.stripe.com/v2/\";\n    script.type = \"text/javascript\";\n    script.async = true;\n    document.body.appendChild(script);\n    loadedStripe = true;\n  }\n\n  render() {\n    const title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PaymentMethods, {\n      showCards: true,\n      showBanks: true,\n      cards: [{\n        id: '1',\n        last4: '1234',\n        brand: 'visa'\n      }],\n      banks: [],\n      onAddCard: () => this.openDialog('card'),\n      onAddBank: () => this.openDialog('bank'),\n      onRemoveCard: this.removeCard,\n      onRemoveBank: this.removeBank,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      title: title,\n      modal: false,\n      open: this.state.dialogOpen,\n      onRequestClose: this.closeDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, this.state.cardDialog ? /*#__PURE__*/React.createElement(CardForm, {\n      onSubmit: this.onSubmitCard,\n      getName: true,\n      getZip: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(BankForm, {\n      onSubmit: this.onSubmitBank,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/vladimir/Desktop/Projects/Ecommerce/e-shop/src/components/ShoppingCart/PaymentForm.js"],"names":["CardForm","BankForm","PaymentMethods","React","Component","Dialog","MuiThemeProvider","server","loadedStripe","PaymentForm","state","dialogOpen","cardDialog","openDialog","type","setState","closeDialog","removeCard","id","removeBank","removeBankAccount","onSubmitCard","card","number","exp_month","exp_year","cvc","name","zip","Stripe","createToken","address_zip","status","response","error","alert","message","cardToken","saveCard","onSubmitBank","account","accountNumber","routingNumber","accountType","account_holder_type","bankAccount","country","currency","routing_number","account_number","account_holder_name","bankAccountToken","saveBankAccount","componentWillMount","script","document","createElement","src","async","body","appendChild","render","title","last4","brand"],"mappings":"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","sourcesContent":["import { CardForm, BankForm, PaymentMethods } from 'react-payment';\nimport React, { Component } from 'react'\nimport Dialog from 'material-ui/Dialog';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n \nimport server from './server';\n \nlet loadedStripe = false;\n \nexport default class PaymentForm extends Component {\n \n  state = {\n    dialogOpen: false,\n    cardDialog: true\n  };\n \n  componentWillMount() {\n    if (loadedStripe) {\n      return;\n    }\n \n    const script = document.createElement(\"script\");\n    script.src = \"https://js.stripe.com/v2/\";\n    script.type = \"text/javascript\";\n    script.async = true;\n    document.body.appendChild(script);\n \n    loadedStripe = true;\n  }\n \n  openDialog = (type) => {\n    this.setState({\n      dialogOpen: true,\n      cardDialog: type === 'card' ? true : false\n    });\n  };\n \n  closeDialog = () => {\n    this.setState({dialogOpen: false});\n  };\n \n  removeCard = (id) => {\n    server.removeCard(id);\n  };\n \n  removeBank = (id) => {\n    server.removeBankAccount(id);\n  };\n \n  onSubmitCard = (card) => {\n    const { number, exp_month, exp_year, cvc, name, zip } = card;\n    Stripe.card.createToken({\n      number,\n      exp_month,\n      exp_year,\n      cvc,\n      name,\n      address_zip: zip\n    }, (status, response) => {\n      if (response.error) {\n        alert('Adding card failed with error: ' + response.error.message)\n      } else {\n        const cardToken = response.id;\n        server.saveCard(cardToken);\n        this.closeDialog();\n        // show success message\n      }\n    });\n  };\n \n  onSubmitBank = (account) => {\n    const { name, accountNumber, routingNumber, accountType } = account;\n    const account_holder_type = accountType === 'personal' ? 'individual' : 'company';\n \n    Stripe.bankAccount.createToken({\n      country: 'US',\n      currency: 'USD',\n      routing_number: routingNumber,\n      account_number: accountNumber,\n      account_holder_name: name,\n      account_holder_type\n    }, (status, response) => {\n      if (response.error) {\n        alert('Adding bank account failed with error: ' + response.error.message);\n      } else {\n        const bankAccountToken = response.id;\n        server.saveBankAccount(bankAccountToken);\n        this.closeDialog();\n        // show success message\n      }\n    })\n  };\n \n  render() {\n    const title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\n \n    return (\n      <MuiThemeProvider>\n        <PaymentMethods\n          showCards={true}\n          showBanks={true}\n          cards={[{ id: '1', last4: '1234', brand: 'visa' }]}\n          banks={[]}\n          onAddCard={() => this.openDialog('card')}\n          onAddBank={() => this.openDialog('bank')}\n          onRemoveCard={this.removeCard}\n          onRemoveBank={this.removeBank}\n          />\n        <Dialog\n          title={title}\n          modal={false}\n          open={this.state.dialogOpen}\n          onRequestClose={this.closeDialog}\n        >\n          {\n            this.state.cardDialog ?\n            <CardForm\n              onSubmit={this.onSubmitCard}\n              getName={true}\n              getZip={true}\n            />\n            :\n            <BankForm\n              onSubmit={this.onSubmitBank}\n            />\n          }\n        </Dialog>\n      </MuiThemeProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}